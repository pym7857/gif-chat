extends layout

block content
  h1= title
  a#exit-btn(href='/') 방 나가기
  fieldset
    legend 채팅 내용
    #chat-list
      for chat in chats
        if chat.user === user               
          .mine(style='color:' + chat.user)     
            div= chat.user
            if chat.gif
              img(src='/gif/' + chat.gif)
            else
              div= chat.chat
        else if chat.user === 'system'      
          .system
            div= chat.chat
        else                               
          .other(style='color:' + chat.user)
            div= chat.user
            if chat.gif
              img(src='/gif/' + chat.gif)
            else
              div= chat.chat
  form#chat-form(action='/chat' method='post' enctype='multipart/form-data')
    label(for='gif') GIF 올리기
    input#gif(type='file' name='gif' accept='image/gif')
    input#chat(name='chat')
    button(type='submit') 전송
  script(src='/socket.io/socket.io.js')
  script.
    var socket = io.connect('http://localhost:8005/chat', {     // [ socket.io 연결부분 ]
                                                                // 네임스페이스가 /chat입니다. 
                                                                // /chat 으로 보낸 데이터만 받을 수 있습니다.
      path: '/socket.io'
    });
    socket.on('join', function (data) {         // 이벤트: join(사용자 입장)
      var div = document.createElement('div');
      div.classList.add('system');
      var chat = document.createElement('div');
      div.textContent = data.chat;
      div.appendChild(chat);
      document.querySelector('#chat-list').appendChild(div);
    });
    socket.on('exit', function (data) {         // 이벤트: exit(사용자 퇴장)
      var div = document.createElement('div');
      div.classList.add('system');
      var chat = document.createElement('div');
      div.textContent = data.chat;
      div.appendChild(chat);
      document.querySelector('#chat-list').appendChild(div);
    });